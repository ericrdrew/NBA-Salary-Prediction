library(tidyverse)
#https://www.basketball-reference.com/contracts/players.html
salary <- read.csv("C:\\Users\\ericd\\OneDrive - North Carolina State University\\Desktop\\PersonalProjects\\NBA-Salary-Prediction\\Data\\Salary.csv")
colnames(salary) <- c("Rank", "Player", "Team","Sal2122", "Sal2223", "SignedUsing", "Guaranteed")
#https://www.basketball-reference.com/leagues/NBA_2022_totals.html
#Total Stat data
totalStats <- read.csv("C:\\Users\\ericd\\OneDrive - North Carolina State University\\Desktop\\PersonalProjects\\NBA-Salary-Prediction\\Data\\totalStats.csv")
#If a player changed teams mid season, he will have 3+ observations(total stats, stats for team 1, stats for team 2)
#Remove the "total" observation(for now)
totalStats <- totalStats %>% filter(Tm!='TOT')
#https://www.basketball-reference.com/leagues/NBA_2022_advanced.html
#Advanced Stats Data
advanced <- read.csv("C:\\Users\\ericd\\OneDrive - North Carolina State University\\Desktop\\PersonalProjects\\NBA-Salary-Prediction\\Data\\advancedStats.csv")
#Remove the "total" observation(for now)
advanced <- advanced %>% filter(Tm!='TOT')
#https://www.basketball-reference.com/leagues/NBA_2022_adj_shooting.html
#Per 100 possessions data
per100 <- read.csv("C:\\Users\\ericd\\OneDrive - North Carolina State University\\Desktop\\PersonalProjects\\NBA-Salary-Prediction\\Data\\per100.csv")
#Remove the "total" observation(for now)
per100 <- per100 %>% filter(Tm!='TOT')
#SALARY: Keep player, team, 21-22 salary, and method signed
salary <- salary %>% subset(select = c(Player,Sal2122,Sal2223))
salary <- distinct(salary)
#Convert total stats into per game numbers in new dataframe
perGameStats <- totalStats %>% mutate(MPG = round(MP/G,2),
ORPG = round(ORB/G,2),
DRPG = round(DRB/G,2),
RPG = round(TRB/G,2),
APG = round(AST/G,2),
SPG = round(STL/G,2),
BPG = round(BLK/G,2),
TOPG = round(TOV/G,2),
FoulPG = round(PF/G,2),
PPG = round(PTS/G,2))
#TotalStats: Drop rank, team, FG, FGA, X3P, X3PA, X2P, X2PA, FT, FTA, MP, ORB, DRB, TRB, AST, STL, BLK, TOV, PF, PTS, GS
perGameStats <- perGameStats %>% subset(select = -c(Rk, FG, FGA, X3P, X3PA, X2P, X2PA, FT, FTA, MP,ORB,DRB,TRB, AST,STL, BLK, TOV, PF, PTS, Player.additional, GS))
#Advanced Stats: keep Player, PER, TS., USG., OWS, DWS, WS, VORP
advanced <- advanced %>% subset(select= c(Player,Tm, PER, TS., USG., OWS, DWS, WS, VORP))
#per100 Data: Keep ORtg, DRtg
per100 <- per100 %>% subset(select= c(Player, Tm,ORtg, DRtg))
FullTable <- merge(perGameStats, per100, by=c('Player','Tm'), all.x=TRUE)
FullTable <- merge(FullTable, advanced, by=c('Player','Tm'), all.x=TRUE)
FullTable <- merge(FullTable, salary, by='Player', all.x=TRUE)
FullTable <- na.omit(FullTable) %>% filter((Sal2122!='' & G >=20))
FullTable <- filter(FullTable, G>=20)
#Change dollar salary value to regular numeric
FullTable$Sal2122 <- str_replace_all(FullTable$Sal2122, "[^[:alnum:]]", "") %>% as.numeric()
FullTable$Sal2223 <- str_replace_all(FullTable$Sal2223, "[^[:alnum:]]", "") %>% as.numeric()
#Change position to a factor
FullTable$Pos <- as.factor(FullTable$Pos)
model <- lm(data=FullTable, Sal2122~.-Player-Tm-Sal2223-WS-RPG-VORP-TOPG)
vif(model)
library(car)
model <- lm(data=FullTable, Sal2122~.-Player-Tm-Sal2223-WS-RPG-VORP-TOPG)
vif(model)
#check correlations on some of the high GVIF values
cor(FullTable[,c('ORPG','DRPG','RPG','OWS','DWS','WS')])
#Remove WS, RPG but keep their individual parts'
cor(FullTable[,c('MPG','TOPG','PER','TS.','USG.','OWS','DWS','APG')])
#Remove VORP, TOPG
cor(FullTable[,c('PPG','PER','TS.','USG.','eFG.')])
###***Make 2 datasets, 1 removing PER/USG, 1 keeping the remaining variables. Make models with both
set1 <- FullTable %>% select(-c(Sal2223,WS, RPG, VORP, TOPG,Tm,Pos))
set2 <- FullTable %>% select(-c(Sal2223, WS, RPG, VORP, TOPG, PER, USG., Tm, Pos))
summary(set1)
na_count <-sapply(set1, function(set1) sum(length(which(is.na(set1)))))
na_count
#No missing values across our remaining variables
model1 <- lm(data=set1, Sal2122~.-Player)
model2 <- lm(data=set2, Sal2122~.-Player)
summary(model1)
summary(model2)
#Nothing really to show here, both models are significant but a lot of non-significant coefficients
#Plot the residuals vs fitted values
ggplot(model1, aes(x=fitted.values(model1), y=resid(model1))) + geom_point() + labs(x='Fitted Values',
y='Residual Values',
title='Model1 Resid vs. Fitted')
ggplot(model2, aes(x=fitted.values(model2), y=resid(model2))) + geom_point() + labs(x='Fitted Values',
y='Residual Values',
title='Model2 Resid vs. Fitted')
empty.model1 <- lm(data=set1, Sal2122~1)
full.model1 <- lm(data=set1, Sal2122~.-Player)
forward <- step(empty.model1, scope=list(lower=empty.model1, upper=full.model1), direction = 'forward',
k=2, lower.tail = FALSE)
summary(forward)
#R2: .6923
backward <- step(full.model1, scope=list(lower=empty.model1, upper=full.model1), direction = 'backward',
k=2, lower.tail=FALSE)
summary(backward)
#R2: 6917
both <- step(empty.model1, scope=list(lower=empty.model1, upper=full.model1), direction = 'both',
k=2, lower.tail = FALSE)
summary(both)
#R2: .6914
#Same as forwards model, TS seems like it can be removed***
set1 <- select(set1, -TS.)
#Now re-run the above models
#Forward model is now the best(R^2: .6923)
#Plot residuals vs fitted
ggplot(forward, aes(x=fitted.values(forward), y=resid(forward))) + geom_point() + labs(x='Fitted Values',
y='Residual Values',
title='Model1 Resid vs. Fitted')
#Still showing that line, going to keep that on hold while we try Set2 Modeling
set2 <- set2 %>% select(-TS.)
empty.model2 <- lm(data=set2, Sal2122~1)
full.model2 <- lm(data=set2, Sal2122~.-Player)
forward <- step(empty.model2, scope=list(lower=empty.model2, upper=full.model2), direction = 'forward',
k=2, lower.tail = FALSE)
summary(forward)
#R2: .678
backward <- step(full.model2, scope=list(lower=empty.model2, upper=full.model2), direction = 'backward',
k=2, lower.tail=FALSE)
summary(backward)
#R2: .678
both <- step(empty.model2, scope=list(lower=empty.model2, upper=full.model2), direction = 'both',
k=2, lower.tail = FALSE)
summary(both)
#R2: .678
#Move on with set1 models
summary(forward)
ggplot(forward, aes(x=fitted.values(forward), y=resid(forward))) + geom_point() + labs(x='Fitted Values',
y='Residual Values',
title='Model1 Resid vs. Fitted')
#Unsure of what the slant is on the left side of the graph, let's drill into some of the variables
ggplot(forward, aes(x=PPG, y=resid(forward))) + geom_point() #Looks random
ggplot(forward, aes(x=Age, y=resid(forward))) + geom_point() #Looks somewhat random
ggplot(forward, aes(x=DWS, y=resid(forward))) + geom_point() #kinda rangy at the start but doesn't seem terrible
ggplot(forward, aes(x=APG, y=resid(forward))) + geom_point() #***Looks to have that pattern that could cause the line
ggplot(forward, aes(x=G, y=resid(forward))) + geom_point() #Looks random
ggplot(forward, aes(x=OWS, y=resid(forward))) + geom_point() #isn't totally random but doesn't look like that pattern
ggplot(forward, aes(x=ORPG, y=resid(forward))) + geom_point() #not evenly distributed but looks random
ggplot(forward, aes(x=BPG, y=resid(forward))) + geom_point() #mostly random even tho most obs are 0-1
ggplot(forward, aes(x=DRPG, y=resid(forward))) + geom_point() #seems random
ggplot(forward, aes(x=FoulPG, y=resid(forward))) + geom_point() #***not many obs but the pattern shows
ggplot(forward, aes(x=PER, y=resid(forward))) + geom_point() #***drawn out and few obs but pattern shows
summary(forward)
ggplot(forward, aes(x=fitted.values(forward), y=resid(forward))) + geom_point() + labs(x='Fitted Values',
y='Residual Values',
title='Model1 Resid vs. Fitted')
#Unsure of what the slant is on the left side of the graph, let's drill into some of the variables
ggplot(forward, aes(x=PPG, y=resid(forward))) + geom_point() #Looks random
ggplot(forward, aes(x=Age, y=resid(forward))) + geom_point() #Looks somewhat random
ggplot(forward, aes(x=DWS, y=resid(forward))) + geom_point() #kinda rangy at the start but doesn't seem terrible
ggplot(forward, aes(x=APG, y=resid(forward))) + geom_point() #***Looks to have that pattern that could cause the line
ggplot(forward, aes(x=G, y=resid(forward))) + geom_point() #Looks random
ggplot(forward, aes(x=OWS, y=resid(forward))) + geom_point() #isn't totally random but doesn't look like that pattern
ggplot(forward, aes(x=ORPG, y=resid(forward))) + geom_point() #not evenly distributed but looks random
ggplot(forward, aes(x=BPG, y=resid(forward))) + geom_point() #mostly random even tho most obs are 0-1
ggplot(forward, aes(x=DRPG, y=resid(forward))) + geom_point() #seems random
ggplot(forward, aes(x=FoulPG, y=resid(forward))) + geom_point() #***not many obs but the pattern shows
#ggplot(forward, aes(x=PER, y=resid(forward))) + geom_point() #***drawn out and few obs but pattern shows
ggplot(forward, aes(x=MPG, y=resid(forward))) + geom_point() #***Notable fanning, looks to be both sides tho
summary(forward)
ggplot(forward, aes(x=fitted.values(forward), y=resid(forward))) + geom_point() + labs(x='Fitted Values',
y='Residual Values',
title='Model1 Resid vs. Fitted')
#Unsure of what the slant is on the left side of the graph, let's drill into some of the variables
ggplot(forward, aes(x=PPG, y=resid(forward))) + geom_point() #Looks random
ggplot(forward, aes(x=Age, y=resid(forward))) + geom_point() #Looks somewhat random
ggplot(forward, aes(x=DWS, y=resid(forward))) + geom_point() #kinda rangy at the start but doesn't seem terrible
ggplot(forward, aes(x=APG, y=resid(forward))) + geom_point() #***Looks to have that pattern that could cause the line
ggplot(forward, aes(x=G, y=resid(forward))) + geom_point() #Looks random
ggplot(forward, aes(x=OWS, y=resid(forward))) + geom_point() #isn't totally random but doesn't look like that pattern
ggplot(forward, aes(x=ORPG, y=resid(forward))) + geom_point() #not evenly distributed but looks random
ggplot(forward, aes(x=BPG, y=resid(forward))) + geom_point() #mostly random even tho most obs are 0-1
ggplot(forward, aes(x=DRPG, y=resid(forward))) + geom_point() #seems random
ggplot(forward, aes(x=FoulPG, y=resid(forward))) + geom_point() #***not many obs but the pattern shows
#ggplot(forward, aes(x=PER, y=resid(forward))) + geom_point() #***drawn out and few obs but pattern shows
#ggplot(forward, aes(x=MPG, y=resid(forward))) + geom_point() #***Notable fanning, looks to be both sides tho
#ggplot(forward, aes(x=USG., y=resid(forward))) + geom_point() #***Fanning
empty.model1 <- lm(data=set1, Sal2122~1)
full.model1 <- lm(data=set1, Sal2122~.-Player-USG.)
forward <- step(empty.model1, scope=list(lower=empty.model1, upper=full.model1), direction = 'forward',
k=2, lower.tail = FALSE)
summary(forward)
#R2 -PER: .678
#R2 - FoulPG: .6756
#R2 -USG.: .6939
backward <- step(full.model1, scope=list(lower=empty.model1, upper=full.model1), direction = 'backward',
k=2, lower.tail=FALSE)
summary(backward)
#R2 -PER: .6886
#R2 -FoulPG: .6901
#R2: .6917
both <- step(empty.model1, scope=list(lower=empty.model1, upper=full.model1), direction = 'both',
k=2, lower.tail = FALSE)
summary(both)
#R2 -PER: .678
#R2 -FoulPG: .6756
#R2 -USG.: .6917
#PLOT RESIDUALS AND NOTE IF PATTERN IS GONE
ggplot(forward, aes(x=fitted.values(forward), y=resid(forward))) + geom_point() + labs(x='Fitted Values',
y='Residual Values',
title='Model1 Resid vs. Fitted')
#Removed PER: Pattern looks more defined than ever
#Removed USG.: Pattern still there
#Removed FoulPG; pattern still there
summary(forward)
set3 <- set1 %>% select(c(Sal2122,PPG,Age,DWS,APG,G,OWS,ORPG,BPG,DRPG,FoulPG,PER,MPG,ORtg,SPG))
#step again
empty.model <- lm(data=set3, Sal2122~1)
full.model <- lm(data=set3, Sal2122~.)
forward <- step(empty.model, scope=list(lower=empty.model, upper=full.model), direction = 'forward',
k=2, lower.tail = FALSE)
summary(forward)
backward <- step(full.model, scope=list(lower=empty.model, upper=full.model), direction = 'backward',
k=2, lower.tail=FALSE)
summary(backward)
both <- step(empty.model, scope=list(lower=empty.model, upper=full.model), direction = 'both',
k=2, lower.tail = FALSE)
summary(both)
ggplot(forward, aes(x=fitted.values(forward), y=resid(forward))) + geom_point() + labs(x='Fitted Values',
y='Residual Values',
title='Model1 Resid vs. Fitted')
ggplot(forward, aes(x=fitted.values(forward), y=resid(forward))) + geom_point() + labs(x='Fitted Values',
y='Residual Values',
title='Model1 Resid vs. Fitted')
#passes the homoskedasticity test
cor.test(abs(resid(forward)), fitted.values(forward), method='spearman', exact=F)
#fails normality tests
qqnorm(resid(forward))
qqline(resid(forward))
ad.test(resid(forward))
library(nortest)
ggplot(forward, aes(x=fitted.values(forward), y=resid(forward))) + geom_point() + labs(x='Fitted Values',
y='Residual Values',
title='Model1 Resid vs. Fitted')
#passes the homoskedasticity test
cor.test(abs(resid(forward)), fitted.values(forward), method='spearman', exact=F)
#fails normality tests
qqnorm(resid(forward))
qqline(resid(forward))
ad.test(resid(forward))
shapiro.test(resid(forward))
boxCox(forward)
n.index = seq(1,nrow(set3))
set3 <- cbind(set3, n.index)
#studentized residuals
ggplot(data=forward, aes(x=n.index, y=rstudent(forward))) + geom_point(color='red') + geom_line(y=-3) + geom_line(y=3) + labs(title='External Studentized Residuals', x='Observation Number', y = 'Residuals')
#cook's d test
d.cut <- 4/(nrow(set3)-length(forward$coefficients)-1)
ggplot(forward, aes(x=n.index, y=cooks.distance(forward))) + geom_point(color='red') + geom_line(y=d.cut) +
labs(title='Cooks D', x='Observation', y='Cooks Distance')
#DFFIts test
df.cut <- 2*sqrt((15)/nrow(set3))
ggplot(model, aes(x=n.index, y=dffits(model))) + geom_point(color='red') + geom_line(y=df.cut) + geom_line(y=-df.cut) +
labs(title='DfFIts ', x='Observation', y='dffits cut')
#Total Stat data
testStats <- read.csv("C:\\Users\\ericd\\OneDrive - North Carolina State University\\Desktop\\PersonalProjects\\NBA-Salary-Prediction\\Data\\testStats.csv", header=TRUE)
testSal <-salary %>% subset(select = c(Player,Sal2223))
#per100 test data
test100 <- read.csv("C:\\Users\\ericd\\OneDrive - North Carolina State University\\Desktop\\PersonalProjects\\NBA-Salary-Prediction\\Data\\test100Stats.csv")
#advanced data
testAdvanced <- read.csv("C:\\Users\\ericd\\OneDrive - North Carolina State University\\Desktop\\PersonalProjects\\NBA-Salary-Prediction\\Data\\testAdvanced.csv")
#merge 100 onto stats
test <- merge(testStats, test100, by=c('Player', 'Tm'), all.x=TRUE)
#merge advanced onto test
test <- merge(test, testAdvanced, by=c('Player', 'Tm'), all.x=TRUE)
#merge salary onto testing stats
test <- merge(test, salary, by='Player', all.x=TRUE)
test <- na.omit(test) %>% filter((Sal2223!='' & G >=20))
test$Sal2223 <- str_replace_all(test$Sal2223, "[^[:alnum:]]", "") %>% as.numeric()
test <- test %>% select(c(Sal2223, PTS, Age,DWS,AST,G,OWS,ORB,BLK,DRB,PF,PER,MP,ORtg,STL))
colnames(test) <- c('Sal2223','PPG','Age','DWS','APG','G','OWS','ORPG','BPG', 'DRPG','FoulPG','PER','MPG','ORtg','SPG')
test$n.index <- seq(1,nrow(test))
valid.fit = predict(forward, newdata=test)
MAE <- median(abs(test$Sal2223-valid.fit))
MAE
mean(test$Sal2223)
